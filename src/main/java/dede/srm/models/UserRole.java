package dede.srm.models;
// Generated Jan 19, 2021, 8:33:12 AM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import dede.srm.models.enums.ERole;

/**
 * UserRole generated by hbm2java
 */
@Entity
@Table(name = "user_role", schema = "public")
public class UserRole implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8199950786026017533L;
	private Long id;
	private ERole name;
	private Date createDate;
	private Date updateDate;
	private String remark;
	private Set<User> users = new HashSet<User>(0);

	public UserRole() {
	}

	public UserRole(Long id, Date createDate, Date updateDate) {
		this.id = id;
		this.createDate = createDate;
		this.updateDate = updateDate;
	}

	public UserRole(Long id, ERole name, Date createDate, Date updateDate, String remark, Set<User> users) {
		this.id = id;
		this.name = name;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.remark = remark;
		this.users = users;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	@Enumerated(EnumType.STRING)
	@Column(name = "name")
	public ERole getName() {
		return this.name;
	}

	public void setName(ERole name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", nullable = false, length = 22)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", nullable = false, length = 22)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "remark")
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userRole")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
